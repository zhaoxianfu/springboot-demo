server:
  port: 9090

spring:
  redis:
    database: 0           #redis操作的数据库,从0-15,我们这里选择0
    host: 127.0.1         #redis的地址
    port: 6379            #redis的端口号
    jedis:
      pool:
        max-active: 30       #最大激活连接数
        max-wait: -1         #-1代表不限制
        max-idle: 10         #最大空闲连接数
        min-idle: 0          #最小空闲连接数
    timeout: 1000           #等待时间
    password:               #redis默认没有密码

  datasource:
    url: jdbc:mysql://localhost:3306/redis_demo          #数据库的连接地址
    driverclassname: com.mysql.jdbc.Driver               #mysql数据库连接驱动
    username: root                                       #用户名
    password: 123456                                     #密码
    hikari:                                              #hikari数据库连接池的配置
      maximum-pool-size: 30
      minimum-idle: 10

management:
  server:
    port: 8090                #安全起见，监控使用和服务不同的端口,自定义一个监控的端口号
    servlet:
      context-path: /
    ssl:
      enabled: false

  endpoints:
    web:
      exposure:
        include: *            #开放所有的端点进行可以进行访问
  endpoint:
    health:
      show-details: always    #调用health端点的时候显示所有的健康信息(包括redis等其他的一些)
